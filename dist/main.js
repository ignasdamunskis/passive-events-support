(()=>{"use strict";function e(e=!1){let n=!1;try{const e=Object.defineProperty({},"passive",{get:function(){n=!0}});window.addEventListener("testPassive",null,e),window.removeEventListener("testPassive",null,e)}catch(e){}if(e){const e=`[Passive Events Support] "passive" option is ${n?"":"not "}supported by your browser.`;n?console.info(e):console.warn(e)}return n}window.passiveSupported=e(window.passiveDebug),function(n){const t={events:["scroll","wheel","touchstart","touchmove","touchenter","touchend","touchleave","mouseout","mouseleave","mouseup","mousedown","mousemove","mouseenter","mousewheel","mouseover"],preventedListeners:[],debug:!1,...{events:window.passiveEvents,preventedListeners:window.passivePreventedListeners,debug:window.passiveDebug}};t.debug&&console.info("[Passive Events Support] Configurations",t);const{events:s,preventedListeners:o,debug:i}=t,u=EventTarget.prototype.addEventListener;EventTarget.prototype.addEventListener=function(...n){const t=n[2];if(s.includes(n[0])&&(!n[2]||void 0===n[2].passive)){let s=!0;if(!o.find((({element:e,event:t})=>this.match(e)&&t===n[0]))){const e=n[1].toString(),[t,...o]=e.split("{"),i=t.replace(/(function|=>)/,"").trim(),u=o.join("{"),r=(i.match(/\(([^)]+)\)/)||[`(${i})`])[0].replace(/[()]/g,"");s=!(!r||!(u.includes("preventDefault")||u.includes(`(${r})`)||u.includes(`(${r},`)||u.includes(`,${r})`)||u.includes(`, ${r})`)||u.includes(`,${r},`)||u.includes(`, ${r},`)))}n[2]={...n[2]||{},...e()&&{passive:!s}},i&&console.info("[Passive Events Support] Updated Event Listeners",{element:this,event:n[0],handler:{fn:n[1],fnArgument,fnContent,fnPrevented:s},oldArguments:t,updatedArguments:n[2]})}u.call(this,...n)}}()})();