(()=>{"use strict";function e(){let e=!1;try{const t=Object.defineProperty({},"passive",{get:function(){e=!0}});window.addEventListener("testPassive",null,t),window.removeEventListener("testPassive",null,t)}catch(e){}return e}const t={vanilla:!0,jquery:!1,events:["scroll","wheel","touchstart","touchmove","touchenter","touchend","touchleave","mouseout","mouseleave","mouseup","mousedown","mousemove","mouseenter","mousewheel","mouseover"]};function n(n,s=t.events){const o=t=>!!e()&&{passive:!t.includes("noPreventDefault")};for(const e of s)n.event.special[e]={setup:function(t,n,s){this.addEventListener(e,s,o(n))}}}window.passiveSupported=e(),function(s){const o={...t,...s};if(o.vanilla){const t=EventTarget.prototype.addEventListener;EventTarget.prototype.addEventListener=function(...n){!o.events.includes(n[0])||n[2]&&void 0!==n[2].passive||(n[2]={...n[2]||{},...e()&&{passive:!n[1].toString().includes("preventDefault")}}),t.call(this,...n)}}o.jquery&&("undefined"!=typeof $&&$.event&&n($,o.events),"undefined"!=typeof jQuery&&jQuery.event&&n(jQuery,o.events))}(window.passiveSupportOptions||{})})();